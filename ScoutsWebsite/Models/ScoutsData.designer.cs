#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScoutsWebsite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ScoutsWebsite")]
	public partial class ScoutsDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCalendarItem(CalendarItem instance);
    partial void UpdateCalendarItem(CalendarItem instance);
    partial void DeleteCalendarItem(CalendarItem instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertLeader(Leader instance);
    partial void UpdateLeader(Leader instance);
    partial void DeleteLeader(Leader instance);
    #endregion
		
		public ScoutsDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ScoutsWebsiteConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ScoutsDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScoutsDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScoutsDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScoutsDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CalendarItem> CalendarItems
		{
			get
			{
				return this.GetTable<CalendarItem>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<Leader> Leaders
		{
			get
			{
				return this.GetTable<Leader>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalendarItems")]
	public partial class CalendarItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CalendarItemID;
		
		private string _CalendarItemTitle;
		
		private System.Nullable<System.DateTime> _CalendarItemFrom;
		
		private System.Nullable<System.DateTime> _CalendarItemUntil;
		
		private System.Nullable<int> _CalendarItemType;
		
		private string _CalendarItemNeeds;
		
		private string _CalendarItemDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarItemIDChanging(System.Guid value);
    partial void OnCalendarItemIDChanged();
    partial void OnCalendarItemTitleChanging(string value);
    partial void OnCalendarItemTitleChanged();
    partial void OnCalendarItemFromChanging(System.Nullable<System.DateTime> value);
    partial void OnCalendarItemFromChanged();
    partial void OnCalendarItemUntilChanging(System.Nullable<System.DateTime> value);
    partial void OnCalendarItemUntilChanged();
    partial void OnCalendarItemTypeChanging(System.Nullable<int> value);
    partial void OnCalendarItemTypeChanged();
    partial void OnCalendarItemNeedsChanging(string value);
    partial void OnCalendarItemNeedsChanged();
    partial void OnCalendarItemDescriptionChanging(string value);
    partial void OnCalendarItemDescriptionChanged();
    #endregion
		
		public CalendarItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CalendarItemID
		{
			get
			{
				return this._CalendarItemID;
			}
			set
			{
				if ((this._CalendarItemID != value))
				{
					this.OnCalendarItemIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemID = value;
					this.SendPropertyChanged("CalendarItemID");
					this.OnCalendarItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemTitle", DbType="VarChar(250)")]
		public string CalendarItemTitle
		{
			get
			{
				return this._CalendarItemTitle;
			}
			set
			{
				if ((this._CalendarItemTitle != value))
				{
					this.OnCalendarItemTitleChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemTitle = value;
					this.SendPropertyChanged("CalendarItemTitle");
					this.OnCalendarItemTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalendarItemFrom
		{
			get
			{
				return this._CalendarItemFrom;
			}
			set
			{
				if ((this._CalendarItemFrom != value))
				{
					this.OnCalendarItemFromChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemFrom = value;
					this.SendPropertyChanged("CalendarItemFrom");
					this.OnCalendarItemFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemUntil", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalendarItemUntil
		{
			get
			{
				return this._CalendarItemUntil;
			}
			set
			{
				if ((this._CalendarItemUntil != value))
				{
					this.OnCalendarItemUntilChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemUntil = value;
					this.SendPropertyChanged("CalendarItemUntil");
					this.OnCalendarItemUntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemType", DbType="Int")]
		public System.Nullable<int> CalendarItemType
		{
			get
			{
				return this._CalendarItemType;
			}
			set
			{
				if ((this._CalendarItemType != value))
				{
					this.OnCalendarItemTypeChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemType = value;
					this.SendPropertyChanged("CalendarItemType");
					this.OnCalendarItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemNeeds", DbType="VarChar(300)")]
		public string CalendarItemNeeds
		{
			get
			{
				return this._CalendarItemNeeds;
			}
			set
			{
				if ((this._CalendarItemNeeds != value))
				{
					this.OnCalendarItemNeedsChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemNeeds = value;
					this.SendPropertyChanged("CalendarItemNeeds");
					this.OnCalendarItemNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarItemDescription", DbType="VarChar(MAX)")]
		public string CalendarItemDescription
		{
			get
			{
				return this._CalendarItemDescription;
			}
			set
			{
				if ((this._CalendarItemDescription != value))
				{
					this.OnCalendarItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CalendarItemDescription = value;
					this.SendPropertyChanged("CalendarItemDescription");
					this.OnCalendarItemDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Posts")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PostID;
		
		private string _PostSubject;
		
		private string _PostContent;
		
		private System.Nullable<System.DateTime> _PostDate;
		
		private System.Data.Linq.Binary _PostAttachment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnPostSubjectChanging(string value);
    partial void OnPostSubjectChanged();
    partial void OnPostContentChanging(string value);
    partial void OnPostContentChanged();
    partial void OnPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostDateChanged();
    partial void OnPostAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnPostAttachmentChanged();
    #endregion
		
		public Post()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostSubject", DbType="VarChar(250)")]
		public string PostSubject
		{
			get
			{
				return this._PostSubject;
			}
			set
			{
				if ((this._PostSubject != value))
				{
					this.OnPostSubjectChanging(value);
					this.SendPropertyChanging();
					this._PostSubject = value;
					this.SendPropertyChanged("PostSubject");
					this.OnPostSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostContent", DbType="VarChar(MAX)")]
		public string PostContent
		{
			get
			{
				return this._PostContent;
			}
			set
			{
				if ((this._PostContent != value))
				{
					this.OnPostContentChanging(value);
					this.SendPropertyChanging();
					this._PostContent = value;
					this.SendPropertyChanged("PostContent");
					this.OnPostContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostDate
		{
			get
			{
				return this._PostDate;
			}
			set
			{
				if ((this._PostDate != value))
				{
					this.OnPostDateChanging(value);
					this.SendPropertyChanging();
					this._PostDate = value;
					this.SendPropertyChanged("PostDate");
					this.OnPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostAttachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PostAttachment
		{
			get
			{
				return this._PostAttachment;
			}
			set
			{
				if ((this._PostAttachment != value))
				{
					this.OnPostAttachmentChanging(value);
					this.SendPropertyChanging();
					this._PostAttachment = value;
					this.SendPropertyChanged("PostAttachment");
					this.OnPostAttachmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leaders")]
	public partial class Leader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LeaderID;
		
		private string _LeaderFirstName;
		
		private string _LeaderLastName;
		
		private string _LeaderEmail;
		
		private string _LeaderPhone;
		
		private int _LeaderTakType;
		
		private System.Nullable<short> _LeaderTakLeader;
		
		private System.Data.Linq.Binary _LeaderPhoto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaderIDChanging(System.Guid value);
    partial void OnLeaderIDChanged();
    partial void OnLeaderFirstNameChanging(string value);
    partial void OnLeaderFirstNameChanged();
    partial void OnLeaderLastNameChanging(string value);
    partial void OnLeaderLastNameChanged();
    partial void OnLeaderEmailChanging(string value);
    partial void OnLeaderEmailChanged();
    partial void OnLeaderPhoneChanging(string value);
    partial void OnLeaderPhoneChanged();
    partial void OnLeaderTakTypeChanging(int value);
    partial void OnLeaderTakTypeChanged();
    partial void OnLeaderTakLeaderChanging(System.Nullable<short> value);
    partial void OnLeaderTakLeaderChanged();
    partial void OnLeaderPhotoChanging(System.Data.Linq.Binary value);
    partial void OnLeaderPhotoChanged();
    #endregion
		
		public Leader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LeaderID
		{
			get
			{
				return this._LeaderID;
			}
			set
			{
				if ((this._LeaderID != value))
				{
					this.OnLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderID = value;
					this.SendPropertyChanged("LeaderID");
					this.OnLeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderFirstName", DbType="VarChar(250)")]
		public string LeaderFirstName
		{
			get
			{
				return this._LeaderFirstName;
			}
			set
			{
				if ((this._LeaderFirstName != value))
				{
					this.OnLeaderFirstNameChanging(value);
					this.SendPropertyChanging();
					this._LeaderFirstName = value;
					this.SendPropertyChanged("LeaderFirstName");
					this.OnLeaderFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderLastName", DbType="VarChar(250)")]
		public string LeaderLastName
		{
			get
			{
				return this._LeaderLastName;
			}
			set
			{
				if ((this._LeaderLastName != value))
				{
					this.OnLeaderLastNameChanging(value);
					this.SendPropertyChanging();
					this._LeaderLastName = value;
					this.SendPropertyChanged("LeaderLastName");
					this.OnLeaderLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderEmail", DbType="VarChar(250)")]
		public string LeaderEmail
		{
			get
			{
				return this._LeaderEmail;
			}
			set
			{
				if ((this._LeaderEmail != value))
				{
					this.OnLeaderEmailChanging(value);
					this.SendPropertyChanging();
					this._LeaderEmail = value;
					this.SendPropertyChanged("LeaderEmail");
					this.OnLeaderEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderPhone", DbType="VarChar(100)")]
		public string LeaderPhone
		{
			get
			{
				return this._LeaderPhone;
			}
			set
			{
				if ((this._LeaderPhone != value))
				{
					this.OnLeaderPhoneChanging(value);
					this.SendPropertyChanging();
					this._LeaderPhone = value;
					this.SendPropertyChanged("LeaderPhone");
					this.OnLeaderPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderTakType", DbType="Int NOT NULL")]
		public int LeaderTakType
		{
			get
			{
				return this._LeaderTakType;
			}
			set
			{
				if ((this._LeaderTakType != value))
				{
					this.OnLeaderTakTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaderTakType = value;
					this.SendPropertyChanged("LeaderTakType");
					this.OnLeaderTakTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderTakLeader", DbType="SmallInt")]
		public System.Nullable<short> LeaderTakLeader
		{
			get
			{
				return this._LeaderTakLeader;
			}
			set
			{
				if ((this._LeaderTakLeader != value))
				{
					this.OnLeaderTakLeaderChanging(value);
					this.SendPropertyChanging();
					this._LeaderTakLeader = value;
					this.SendPropertyChanged("LeaderTakLeader");
					this.OnLeaderTakLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LeaderPhoto
		{
			get
			{
				return this._LeaderPhoto;
			}
			set
			{
				if ((this._LeaderPhoto != value))
				{
					this.OnLeaderPhotoChanging(value);
					this.SendPropertyChanging();
					this._LeaderPhoto = value;
					this.SendPropertyChanged("LeaderPhoto");
					this.OnLeaderPhotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
